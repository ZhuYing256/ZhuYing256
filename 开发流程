通过学习相关文档，总结一下开发人员在开发流程中需要注意的一些内容


1.        需求认领：TPL将本模块需求在GDE Mate完成迭代设置和特性PL设置，开发人员根据在GDE Mate桌面完成需求认领，并维护需求开发进展状态。

2.        需求详细设计&评审：开发人员在启动需求开发编码之前，针对需求的实现细节输出详细设计文档，详细设计文档包括业务实现逻辑、测试建议、省份影响评估和用户感知变化;开发人员在完成需求详细设计文档后需要邮件知会pair、需求测试人员、MDE、TPL进行详细设计评审;

3.        需求澄清：知道了自己的需求后，就要需求澄清，一般如果是综合类需求，即涉及到多个组的需求，主开发组负责约澄清，并知会到其他组，如果是独立开发，跟SE约好澄清后， 喊上测试、资料、导师（或者新员工负责人）、或者TPL 参加。在参加需求澄清前，自己先看一下需求方案， 可以点点对应菜单，看看原有实现， 最好带着问题参加澄清。

4.        反串讲：反串讲目的是看下你对这个需求的理解对不对，在这个环节尽可能的纠错， 对其所有角色对这个需求的理解，避免做完需求发现做错了再返工。

5.        提管控：如果你的需求涉及到要DDL ，记得先提管控工具。

6.        需求开发： 开发人员在GDE Mate更新相应US状态至【开发中】；开发人员根据需求详细设计文档完成需求开发工作，杜绝引入安全红线问题;

7.        完成开发：完成开发后要自测，自测是底线！开发人员参考测试提供的门槛用例完成需求的两层自测和三层自测；开发根据生产组网申请测试环境，自己搭环境，在测试环境下进行测试。     

8.        代码checkin：开发人员创建MR，评审代码，总分达到4分可通过committer将已经自测的代码提交配置库，提交主干代码；通过SVN将已经自测的代码提交配置库，提交分支代码;（容易出现的问题：1、影响的分支漏提交了；2、确保管控工具、UAT等各项审批任务都完成）。

9.       ​ 代码review：准备进行review的代码文件，要求已经开发完毕，并且进行了告警清零、通过了单元测试，相关代码应该已经通过作者自检。例行要求进行两次集中评审：第一次集中评审在迭代三需求开发之前完成；第二次集中评审要保证在版本转现场前完成；

10.      开发完成，在敏捷环境向测试人员、MDE展示程序完成情况；开发人员在敏捷环境上展示程序实现情况，自测用例通过。

ShowCase通过的条件：

1 US对应的功能或接口主流程正确（以测试提供门槛用例执行结果为准，ShowCase时，按照测试用例步骤执行及进行相应结果检查）

2 Story相关脚本（含管控脚本、配置建议、Story文档）已归档正确

3 开发只能在敏捷环境showcase；冒烟环境配置建议必须由测试按照交付件执行

11.      完成showcase后， 记得将研发者桌面上的US状态改为完成
